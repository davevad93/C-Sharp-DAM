// DAVIDE PRESTI
// - Ejercicio 2 -

// Vamos a crear una clase denominada Biblioteca que tendr√° como propiedades: un Nombre
// de tipo string y una lista gen√©rica de libros Libros .
// Su contractor recibir√° el nombre y la lista de libros que hemos creado en el ejercicio
// anterior.
// üìå Nota: Usa la clase Libro creada en el ejercicio anterior.
// Crea un m√©todo p√∫blico denominado BuscaPorISBN que reciba una cadena con el ISBN y
// devuelva el primer libro con ese ISBN o null si no lo encuentra.
// Primero vamos a practicar con el concepto 'de tipos an√≥nimos' para guardar solo los
// datos referentes a un pr√©stamo de un Libro en un fichero. Sin definir una nueva clase
// o tipo Pr√©stamo.
// Para ello, vamos a crear un m√©todo p√∫blico en la clase Biblioteca denominado
// Presta . Este m√©todo recibir√° dos string : dni del socio ISBN del libro a > prestar.
// Buscaremos el ISBN en la lista de libros y si lo encontramos, crearemos un nuevo
// objeto an√≥nimo var pr√©stamo con las propiedades DNI , Titulo e ISBN .
// üìå Nota: En caso de no existir el lSBN en la biblioteca generaremos una
// BliblitecaException con el mensaje correspondiente.
// Por √∫ltimo, a√±adiremos a un fichero denominado prestamos.txt la cadena resultado
// de pasar a ToString este objeto an√≥nimo seguida de un salto de l√≠nea.
// üìå Nota: Gestionaremos el acceso al fichero con una o m√°s sentencias using.
// Crea otro m√©todo p√∫blico EstaPrestado al que se le pasar√° el ISBN de un libro y
// devolver√° un Booleano que nos indicar√° si el libro se encuentra prestado o no,
// üìå Nota: Gestionaremos el acceso al fichero con una o m√°s sentencias using . Adem√°s,
// se puede usar, por ejemplo, el m√©todo Contains de la clase string.
// Crea un m√©todo p√∫blico CuentaLibrosConNumeroDePaginasMenorA que reciba un valor
// entero y te devuelva la cantidad de l√≠bros con un n√∫mero de p√°ginas menor a ese valor
// entero.
// Crea un m√©todo p√∫blico EliminaPorAutor que reciba el nombre de un autor y borre de la
// biblioteca aquellos libros de ese autor.
// Redefine el m√©todo ToString() en Libro creando un tipo an√≥nimo con Libro ,
// Autor , e ISBN y devolviendo su ToString.

namespace ejericio2
{
    class Libro
    {
        public String Titulo {get; set;}
        public String Autor {get; set;}
        public short NumPaginas {get; set;}
        public String ISBN {get; set;}

        public Libro(string titulo, string autor, short numPaginas, string isbn)
        {
            Titulo = titulo;
            Autor = autor;
            NumPaginas = numPaginas;
            ISBN = isbn;
        }

        public override string ToString()
        {
            return new {ISBN, Titulo, Autor}.ToString();
        }
    }
}